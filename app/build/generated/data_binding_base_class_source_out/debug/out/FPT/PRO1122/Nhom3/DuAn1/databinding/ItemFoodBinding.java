// Generated by view binder compiler. Do not edit!
package FPT.PRO1122.Nhom3.DuAn1.databinding;

import FPT.PRO1122.Nhom3.DuAn1.R;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemFoodBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final ImageView ivFoodHome;

  @NonNull
  public final TextView tvNameFoodHome;

  @NonNull
  public final TextView tvPriceHome;

  @NonNull
  public final TextView tvRateHome;

  @NonNull
  public final TextView tvVND;

  private ItemFoodBinding(@NonNull LinearLayout rootView, @NonNull ImageView ivFoodHome,
      @NonNull TextView tvNameFoodHome, @NonNull TextView tvPriceHome, @NonNull TextView tvRateHome,
      @NonNull TextView tvVND) {
    this.rootView = rootView;
    this.ivFoodHome = ivFoodHome;
    this.tvNameFoodHome = tvNameFoodHome;
    this.tvPriceHome = tvPriceHome;
    this.tvRateHome = tvRateHome;
    this.tvVND = tvVND;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemFoodBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemFoodBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_food, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemFoodBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.ivFoodHome;
      ImageView ivFoodHome = ViewBindings.findChildViewById(rootView, id);
      if (ivFoodHome == null) {
        break missingId;
      }

      id = R.id.tvNameFoodHome;
      TextView tvNameFoodHome = ViewBindings.findChildViewById(rootView, id);
      if (tvNameFoodHome == null) {
        break missingId;
      }

      id = R.id.tvPriceHome;
      TextView tvPriceHome = ViewBindings.findChildViewById(rootView, id);
      if (tvPriceHome == null) {
        break missingId;
      }

      id = R.id.tvRateHome;
      TextView tvRateHome = ViewBindings.findChildViewById(rootView, id);
      if (tvRateHome == null) {
        break missingId;
      }

      id = R.id.tvVND;
      TextView tvVND = ViewBindings.findChildViewById(rootView, id);
      if (tvVND == null) {
        break missingId;
      }

      return new ItemFoodBinding((LinearLayout) rootView, ivFoodHome, tvNameFoodHome, tvPriceHome,
          tvRateHome, tvVND);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
